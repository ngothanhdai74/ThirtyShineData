// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WebTest.DataObject.EntityTypes;

namespace WebTest.DataObject.DbContextName
{
    public partial class _30ShinepayContext : DbContext
    {
        public _30ShinepayContext()
        {
        }

        public _30ShinepayContext(DbContextOptions<_30ShinepayContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Account> Account { get; set; }
        public virtual DbSet<AccountLog> AccountLog { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=10.0.2.76;Initial Catalog=30shinepay;Persist Security Info=True;User ID=ad_30s;Password=VDrs8XHyz3Rdc7PAiv5Q");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Account>(entity =>
            {
                entity.HasKey(e => e.CustomerId)
                    .HasName("PK__Account__A4AE64D8CDDBC3D6");

                entity.HasIndex(e => e.CustomerId)
                    .HasName("UQ__Account__A4AE64D997889BE7")
                    .IsUnique();

                entity.Property(e => e.CustomerId).ValueGeneratedNever();

                entity.Property(e => e.MigrateStatus).HasDefaultValueSql("((0))");

                entity.Property(e => e.Verion)
                    .IsRowVersion()
                    .IsConcurrencyToken();
            });

            modelBuilder.Entity<AccountLog>(entity =>
            {
                entity.Property(e => e.Channel).IsUnicode(false);

                entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Token).IsUnicode(false);

                entity.Property(e => e.TransactionId).IsUnicode(false);

                entity.Property(e => e.UserAction).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}